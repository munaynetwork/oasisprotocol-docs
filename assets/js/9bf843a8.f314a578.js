"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[7379],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=s,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8751:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),o=["components"],i={},l="Runtime Messages",u={unversionedId:"runtime/messages",id:"runtime/messages",title:"Runtime Messages",description:"In order to enable runtimes to perform actions in the consensus layer on their",source:"@site/external/oasis-core/docs/runtime/messages.md",sourceDirName:"runtime",slug:"/runtime/messages",permalink:"/oasis-core/runtime/messages",draft:!1,tags:[],version:"current",lastUpdatedAt:1655201825,formattedLastUpdatedAt:"6/14/2022",frontMatter:{},sidebar:"oasisCore",previous:{title:"Runtime IDs",permalink:"/oasis-core/runtime/identifiers"},next:{title:"RPC",permalink:"/oasis-core/oasis-node/rpc"}},c={},p=[{value:"Supported Messages",id:"supported-messages",level:2},{value:"Staking Method Call",id:"staking-method-call",level:3},{value:"Limits",id:"limits",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,s.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"runtime-messages"},"Runtime Messages"),(0,a.kt)("p",null,"In order to enable runtimes to perform actions in the consensus layer on their\nbehalf, they can emit ",(0,a.kt)("em",{parentName:"p"},"messages")," in each round."),(0,a.kt)("h2",{id:"supported-messages"},"Supported Messages"),(0,a.kt)("p",null,"The following sections describe the methods supported by the consensus roothash\nservice."),(0,a.kt)("h3",{id:"staking-method-call"},"Staking Method Call"),(0,a.kt)("p",null,"The staking method call message enables a runtime to call one of the supported\n",(0,a.kt)("a",{parentName:"p",href:"/oasis-core/consensus/services/staking#methods"},"staking service methods"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Field name:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"staking\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Body:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang"},'type StakingMessage struct {\n    cbor.Versioned\n\n    Transfer *staking.Transfer `json:"transfer,omitempty"`\n    Withdraw *staking.Withdraw `json:"withdraw,omitempty"`\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Fields:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"v")," must be set to ",(0,a.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"transfer")," indicates that the ",(0,a.kt)("a",{parentName:"li",href:"/oasis-core/consensus/services/staking#transfer"},(0,a.kt)("inlineCode",{parentName:"a"},"staking.Transfer")," method")," should be executed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"withdraw")," indicates that the ",(0,a.kt)("a",{parentName:"li",href:"/oasis-core/consensus/services/staking#withdraw"},(0,a.kt)("inlineCode",{parentName:"a"},"staking.Withdraw")," method")," should be executed.")),(0,a.kt)("p",null,"Exactly one of the supported method fields needs to be non-nil, otherwise the\nmessage is considered malformed."),(0,a.kt)("h2",{id:"limits"},"Limits"),(0,a.kt)("p",null,"The maximum number of runtime messages that can be emitted in a single round is\nlimited by the ",(0,a.kt)("inlineCode",{parentName:"p"},"executor.max_messages")," option in the runtime descriptor. Its\nupper bound is the ",(0,a.kt)("a",{parentName:"p",href:"/oasis-core/consensus/services/roothash#consensus-parameters"},(0,a.kt)("inlineCode",{parentName:"a"},"max_messages")," consensus parameter")," of the roothash service."))}d.isMDXComponent=!0}}]);