"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[4241],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),m=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=m(n),d=r,h=p["".concat(c,".").concat(d)]||p[d]||l[d]||s;return n?o.createElement(h,a(a({ref:t},u),{},{components:n})):o.createElement(h,a({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var m=2;m<s;m++)a[m]=n[m];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3072:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return l}});var o=n(7462),r=n(3366),s=(n(7294),n(3905)),a=["components"],i={},c="Root Hash",m={unversionedId:"consensus/services/roothash",id:"consensus/services/roothash",title:"Root Hash",description:"The roothash service is responsible for runtime commitment processing and",source:"@site/external/oasis-core/docs/consensus/services/roothash.md",sourceDirName:"consensus/services",slug:"/consensus/services/roothash",permalink:"/oasis-core/consensus/services/roothash",draft:!1,tags:[],version:"current",lastUpdatedAt:1655201825,formattedLastUpdatedAt:"6/14/2022",frontMatter:{},sidebar:"oasisCore",previous:{title:"Governance",permalink:"/oasis-core/consensus/services/governance"},next:{title:"Key Manager",permalink:"/oasis-core/consensus/services/keymanager"}},u={},l=[{value:"Methods",id:"methods",level:2},{value:"Executor Commit",id:"executor-commit",level:3},{value:"Events",id:"events",level:2},{value:"Consensus Parameters",id:"consensus-parameters",level:2}],p={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"root-hash"},"Root Hash"),(0,s.kt)("p",null,"The roothash service is responsible for runtime commitment processing and\nminimal runtime state keeping."),(0,s.kt)("p",null,"The service interface definition lives in ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-core/tree/master/go/roothash/api/api.go"},(0,s.kt)("inlineCode",{parentName:"a"},"go/roothash/api")),". It defines the\nsupported queries and transactions. For more information you can also check out\nthe ",(0,s.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/roothash/api?tab=doc"},"consensus service API documentation"),"."),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("h3",{id:"executor-commit"},"Executor Commit"),(0,s.kt)("p",null,"The executor commit method allows an executor node to submit commitments of an\nexecuted computation. A new executor commit transaction can be generated using\n",(0,s.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/roothash/api?tab=doc#NewExecutorCommitTx"},(0,s.kt)("inlineCode",{parentName:"a"},"NewExecutorCommitTx")),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Method name:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"roothash.ExecutorCommit\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Body:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-golang"},'type ExecutorCommit struct {\n    ID      common.Namespace                `json:"id"`\n    Commits []commitment.ExecutorCommitment `json:"commits"`\n}\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Fields:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"id")," specifies the ",(0,s.kt)("a",{parentName:"li",href:"/oasis-core/runtime/identifiers"},"runtime identifier")," of a runtime this commit is for."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"commits")," are the ",(0,s.kt)("a",{parentName:"li",href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/roothash/api/commitment?tab=doc#ExecutorCommitment"},"executor commitments"),".")),(0,s.kt)("h2",{id:"events"},"Events"),(0,s.kt)("h2",{id:"consensus-parameters"},"Consensus Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"max_runtime_messages")," (uint32) specifies the global limit on the number of\n",(0,s.kt)("a",{parentName:"li",href:"/oasis-core/runtime/messages"},"messages")," that can be emitted in each round by the runtime. The default value\nof ",(0,s.kt)("inlineCode",{parentName:"li"},"0")," disables the use of runtime messages.")))}d.isMDXComponent=!0}}]);